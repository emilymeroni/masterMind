// TODO Split up

* {
  box-sizing: border-box;
}

/** VARIABLES **/
:root {
  --peg-size: 30px;
  --peg-size-small: 15px;
  --peg-color: #000000;
}

@mixin gameRoundElement($small: false) {
  $size: var(--peg-size);
  @if $small {
    $size: var(--peg-size-small);
  }
  width: $size;
  height: $size;
  border-radius: 50%;
}

@mixin ballGradient($small: false) {
  $size: calc(var(--peg-size) / 3);
  @if $small {
    $size: calc(var(--peg-size-small) / 3);
  }
  background: radial-gradient(circle at $size $size, var(--peg-color), #0c0c0c);
}

/** PEGS **/
.masterMindCodePeg {
  @include gameRoundElement();
  @include ballGradient();
  cursor: pointer;
}

.masterMindKeyPeg {
  @include gameRoundElement(true);
  @include ballGradient(true);
}

/** HOLES **/
.masterMindHole {
  background-color: #ffdcb05e;
  box-shadow: inset 1px 1px 10px #333;
  border: 2px solid transparent;
}

.masterMindHole--filled {
  border: 0;
}

.masterMindCodeHole {
  @include gameRoundElement();
}

.masterMindRowHolder--active .masterMindCodeHole {
  cursor: pointer;
}

.masterMindHole--active {
  animation: border-pulsate 1s infinite;
}

.masterMindKeyHole {
  @include gameRoundElement(true);
}

.masterMindRowHolder {
  display: flex;
  &:not(:last-child) {
    border-bottom: 2px solid #313131;
  }
}

.masterMindRow {
  display: flex;
  padding: 5px;
}

.mastermindCodeRow {
  flex-grow: 1;
  justify-content: space-around;
  border-right: 2px solid #313131;
}

// ... well, a grid really
.mastermindKeyRow {
  display: grid;
  flex-shrink: 0;
  width: 50px;
  grid-template-columns: 50% 50%;
  grid-gap: 5px;
}

.masterMindBoard {
  max-width: 380px;
  padding: 40px 10px;
  background: url('background.jpg');
  border-radius: 10px;
}

.mastermindPegChooser {
  display: flex;
}

@keyframes border-pulsate {
  0% {
    border-color: transparent;
  }
  50% {
    border-color: #ffdfdf;
  }
  100% {
    border-color: transparent;
  }
}